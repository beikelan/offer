孩子们的游戏  环
public class Solution {
    public int LastRemaining_Solution(int n, int m) {
        int[] array=new int[n];
        int i=-1;int step=0;int count=n;
        while(count>0){
            i++;//被删除的下一个对象
            if(i>=n)i=0;//模拟环
            if(array[i]==-1)continue;
            step++;
            if(step==m){
                array[i]=-1;
                step=0;
                count--;//总数减1
            }
            
        }
        return i;
    }
}
--------------------------
扑克牌顺子
import java.util.Arrays;
public class Solution {
    public boolean isContinuous(int [] numbers) {
//比较0的个数 和 两个相邻数字之间差  的相对大小
        if(numbers==null||numbers.length<5){
            return false;
        }
        Arrays.sort(numbers);
        int count=0;
        for(int num:numbers){
            if(num==0)count++;
        }
        int gapsum=0;
        for(int i=0;i<numbers.length-1;i++){
            int a=numbers[i];
            int b=numbers[i+1];
            if(a==0||b==0){
                continue;
            }
            if(a==b){
                return false;
            }
            gapsum+=b-a-1;}
   
        if(count!=0&&count==gapsum||gapsum==0)
            return true;
    
    return false;
}
}